<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <!-- Ссылка на общие стили -->
        <ResourceDictionary Source="pack://application:,,,/Waveify;component/Themes/Generic.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Waveify;component/Utilities/DataTemplate.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!-- Стили для темной темы -->


    <Style x:Key="menuTextBox" TargetType="TextBox">
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecundaryGrayColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                               Background="{TemplateBinding Background}"
                               CornerRadius="7"
                               Height="14"
                               Width="35"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center">

                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                            </Border.Effect>
                        </Border>
                        <Ellipse x:Name="Ellipse"
                                    Height="20"
                                    Width="20"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Fill="{DynamicResource PrimaryTextColor}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeThickness="3">
                            <!-- Optional -->
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                            </Ellipse.Effect>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- EventTrigger Checked -->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                       Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                       To="#C2D1FC" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                           Storyboard.TargetProperty="Margin"
                                                           To="15 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- EventTrigger UnChecked -->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                       Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                       To="#CECECE" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                           Storyboard.TargetProperty="Margin"
                                                           To="0 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse"
                                   Property="Fill"
                                   Value="{DynamicResource SecundaryBlueColor}"/>
                            <Setter TargetName="Ellipse"
                                  Property="Stroke"
                                  Value="{DynamicResource BorderBrushColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="menuTittle" TargetType="TextBlock" BasedOn="{StaticResource menuTittleBase}">
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="SideBar" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF15013A" Offset="0.333"/>
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="Black" Offset="0.97"/>
                    <GradientStop Color="#FF110030" Offset="0.673"/>

                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="MusicPanell" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Black" />
    </Style>
    <Style x:Key="MainIcon" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="\Images\Waveify_Premium_Small.png"/>
    </Style>
    <Style x:Key="HomePage" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF36009A" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderPage" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF36009A" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderView" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF36009A" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="25 25 25 25"/>
    </Style>
    <Style x:Key="MusicPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="#121212"/>
    </Style>
    <Style x:Key="MusicName" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="menuButton" TargetType="Button" BasedOn="{StaticResource menuButtonBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#121212"/>
                <!-- Темный фон при наведении -->
                <Setter Property="Foreground" Value="White"/>
                <!-- Белый текст при наведении -->
                <Setter Property="BorderBrush" Value="#f1439f"/>
                <!-- Розовая обводка -->
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonSettings" TargetType="RadioButton" BasedOn="{StaticResource ButtonSettingsBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#121212"/>
                <!-- Темный фон при наведении -->
                <Setter Property="Foreground" Value="White"/>
                <!-- Белый текст при наведении -->
                <Setter Property="BorderBrush" Value="#f1439f"/>
                <!-- Розовая обводка -->
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SettingPage" TargetType="Border" BasedOn="{StaticResource SettingsPageBase}">
        <Setter Property="Background" Value="Black" />
    </Style>
    <!-- Другие стили для темной темы -->
    <Style TargetType="Button" x:Key="TransparentButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" Padding="{TemplateBinding Padding}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Color x:Key="DefaultForegroundColor">#888</Color>
    <Color x:Key="SelectedForegroundColor">#fff</Color>


    <!--Datagrid-->
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ColumnColorBrush" Color="#ccc" />
    <SolidColorBrush x:Key="HeaderColorBrush" Color="#fff" />

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="BorderThickness" Value="0 0 0 0.1"/>
        <Setter Property="Padding" Value="0 0 0 10"/>
        <Setter Property="Margin" Value="0 10 0 10"/>
        <Setter Property="BorderBrush" Value="#fff" />
        <Setter Property="Foreground" Value="{StaticResource HeaderColorBrush}"/>
        <Setter Property="FontSize" Value="15px"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="{StaticResource ColumnColorBrush}"/>
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="Margin" Value="0 0 10 0"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{StaticResource ColumnColorBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>

            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>

            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--Sliderbar-->
    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="#555" CornerRadius="0 3 3 0" Height="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True" Background="#3c51fb" BorderThickness="0" BorderBrush="#3c51fb" Height="5">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                                 Color="#3c51fb"
                                 Opacity="1"
                                 BlurRadius="30"/>
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb" >
                    <Ellipse Height="10" Width="10" Fill="White"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Slider"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="PrettySlider" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Scrollbar-->
    <SolidColorBrush x:Key="StandardBorderBrush"
            Color="#888" />
    <SolidColorBrush x:Key="StandardBackgroundBrush"
            Color="Black" />
    <SolidColorBrush x:Key="HoverBorderBrush"
            Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush"
            Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush"
            Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush"
            Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush"
            Color="#444" />
    <SolidColorBrush x:Key="NormalBrush"
            Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush"
            Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush"
            Color="#C8C8C8" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush"
            Color="#888" />

    <Style x:Key="ScrollBarLineButton"
TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
    Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
    Value="True" />
        <Setter Property="OverridesDefaultStyle"
    Value="true" />
        <Setter Property="Focusable"
    Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                Margin="1"
                CornerRadius="2"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{StaticResource GlyphBrush}"
                    Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                        Value="true">
                            <Setter TargetName="Border"
                        Property="Background"
                        Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                        Value="false">
                            <Setter Property="Foreground"
                        Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton"
TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
    Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
    Value="True" />
        <Setter Property="OverridesDefaultStyle"
    Value="true" />
        <Setter Property="IsTabStop"
    Value="false" />
        <Setter Property="Focusable"
    Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
    Value="True" />
        <Setter Property="OverridesDefaultStyle"
    Value="true" />
        <Setter Property="IsTabStop"
    Value="false" />
        <Setter Property="Focusable"
    Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0"
                Width="8"
                Margin="8,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHor"
TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
    Value="True" />
        <Setter Property="OverridesDefaultStyle"
    Value="true" />
        <Setter Property="IsTabStop"
    Value="false" />
        <Setter Property="Focusable"
    Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0"
                Height="8"
                Margin="0,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="0" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
        CornerRadius="2"
        Background="Transparent" />
            <RepeatButton Grid.Row="0"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track"
        Grid.Row="1"
        IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                Margin="1,0,1,0"
                Background="{StaticResource HorizontalNormalBrush}"
                BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
        CornerRadius="3"
        Background="Transparent" />
            <RepeatButton Grid.Column="0"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
        Grid.Column="1"
        IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHor}"
                Margin="0,1,0,1"
                Background="{StaticResource HorizontalNormalBrush}"
                BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
    Value="True" />
        <Setter Property="OverridesDefaultStyle"
    Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
            Value="Horizontal">
                <Setter Property="Width"
            Value="Auto" />
                <Setter Property="Height"
            Value="12" />
                <Setter Property="Template"
            Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
            Value="Vertical">
                <Setter Property="Width"
            Value="18" />
                <Setter Property="Height"
            Value="Auto" />
                <Setter Property="Template"
            Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer"
TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle"
    Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                        Value="{TemplateBinding VerticalOffset}"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                        Orientation="Horizontal"
                        Grid.Row="1"
                        Grid.Column="1"
                        Value="{TemplateBinding HorizontalOffset}"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                        Grid.Row="0"
                        Grid.Column="1"
                        Value="{TemplateBinding VerticalOffset}"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                        Orientation="Horizontal"
                        Grid.Row="1"
                        Grid.Column="0"
                        Value="{TemplateBinding HorizontalOffset}"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RoundedScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Background="Transparent">
                        <Track x:Name="PART_Track" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineUpCommand"
                                            Style="{x:Null}" 
                                            IsTabStop="False" 
                                            Background="Transparent"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource RoundedThumbStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineDownCommand" 
                                            Style="{x:Null}" 
                                            IsTabStop="False" 
                                            Background="Transparent"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="DarkGray"
                          CornerRadius="5"
                          BorderBrush="Gray"
                          BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>